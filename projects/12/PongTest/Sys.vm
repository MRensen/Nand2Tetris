//<class>
//<subroutineDec>
//<parameterList>
//</parameterList>
//<subroutineBody>
function Sys.init 0
//<statements>
//<doStatement>
//<subroutineCall>
//<expressionList>
//</expressionList>
call Math.init 0
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//</expressionList>
call Memory.init 0
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//</expressionList>
call Screen.init 0
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//</expressionList>
call Output.init 0
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//</expressionList>
call Keyboard.init 0
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//</expressionList>
call Main.main 0
//</subroutineCall>
pop temp 0
//</doStatement>
//<returnStatement>
push constant 0
return
//</returnStatement>
//</statements>
//</subroutineBody>
//</subroutineDec>
//<subroutineDec>
//<parameterList>
//</parameterList>
//<subroutineBody>
function Sys.halt 0
//<statements>
//<whileStatement>
label WHILETRUE0
//<expression>
//<term>
push constant 1
neg
//</term>
//</expression>
not
if-goto WHILEFALSE0
goto WHILETRUE0
label WHILEFALSE0
//<returnStatement>
push constant 0
return
//</returnStatement>
//</statements>
//</subroutineBody>
//</subroutineDec>
//<subroutineDec>
//<parameterList>
//</parameterList>
//<subroutineBody>
//<varDec>
//</varDec>
function Sys.wait 3
//<statements>
//<letStatement>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
pop local 0
//</letStatement>
//<letStatement>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
pop local 1
//</letStatement>
//<letStatement>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
pop local 2
//</letStatement>
//<whileStatement>
label WHILETRUE1
//<expression>
//<term>
//<term>
//<expression>
//<term>
push local 0
//</term>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
eq
//</expression>
//</term>
not
//</term>
//</expression>
not
if-goto WHILEFALSE1
//<statements>
//<doStatement>
//<subroutineCall>
push pointer 0
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
//</expressionList>
call Sys.wait 2
//</subroutineCall>
pop temp 0
//</doStatement>
//<whileStatement>
label WHILETRUE2
//<expression>
//<term>
//<term>
//<expression>
//<term>
push local 1
//</term>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
eq
//</expression>
//</term>
not
//</term>
//</expression>
not
if-goto WHILEFALSE2
//<statements>
//<doStatement>
//<subroutineCall>
push pointer 0
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
//</expressionList>
call Sys.wait 2
//</subroutineCall>
pop temp 0
//</doStatement>
//<whileStatement>
label WHILETRUE3
//<expression>
//<term>
//<term>
//<expression>
//<term>
push local 2
//</term>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
eq
//</expression>
//</term>
not
//</term>
//</expression>
not
if-goto WHILEFALSE3
//<statements>
//<doStatement>
//<subroutineCall>
push pointer 0
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//<expression>
//<term>
push constant 1
//</term>
//</expression>
call Math.multiply 2
//</expression>
//</expressionList>
call Sys.wait 2
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
push pointer 0
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//<expression>
//<term>
push constant 1
//</term>
//</expression>
call Math.multiply 2
//</expression>
//</expressionList>
call Sys.wait 2
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
push pointer 0
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
//</expressionList>
call Sys.wait 2
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
push pointer 0
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
//</expressionList>
call Sys.wait 2
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
push pointer 0
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
//</expressionList>
call Sys.wait 2
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
push pointer 0
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
//</expressionList>
call Sys.wait 2
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
push pointer 0
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
//</expressionList>
call Sys.wait 2
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
push pointer 0
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
//</expressionList>
call Sys.wait 2
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
push pointer 0
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
//</expressionList>
call Sys.wait 2
//</subroutineCall>
pop temp 0
//</doStatement>
//<letStatement>
//<expression>
//<term>
push local 2
//</term>
//<expression>
//<term>
push constant 1
//</term>
//</expression>
add
//</expression>
pop local 2
//</letStatement>
//</statements>
goto WHILETRUE3
label WHILEFALSE3
//</whileStatement>
//<letStatement>
//<expression>
//<term>
push local 1
//</term>
//<expression>
//<term>
push constant 1
//</term>
//</expression>
add
//</expression>
pop local 1
//</letStatement>
//</statements>
goto WHILETRUE2
label WHILEFALSE2
//</whileStatement>
//<letStatement>
//<expression>
//<term>
push local 0
//</term>
//<expression>
//<term>
push constant 1
//</term>
//</expression>
add
//</expression>
pop local 0
//</letStatement>
//</statements>
goto WHILETRUE1
label WHILEFALSE1
//</whileStatement>
//<whileStatement>
label WHILETRUE7
//<expression>
//<term>
push local 0
//</term>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
gt
//</expression>
not
if-goto WHILEFALSE7
//<statements>
//<whileStatement>
label WHILETRUE8
//<expression>
//<term>
push local 1
//</term>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
gt
//</expression>
not
if-goto WHILEFALSE8
//<statements>
//<whileStatement>
label WHILETRUE9
//<expression>
//<term>
push local 2
//</term>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
gt
//</expression>
not
if-goto WHILEFALSE9
//<statements>
//<doStatement>
//<subroutineCall>
push pointer 0
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
//</expressionList>
call Sys.wait 2
//</subroutineCall>
pop temp 0
//</doStatement>
//<letStatement>
//<expression>
//<term>
push local 2
//</term>
//<expression>
//<term>
push constant 1
//</term>
//</expression>
sub
//</expression>
pop local 2
//</letStatement>
//</statements>
goto WHILETRUE9
label WHILEFALSE9
//</whileStatement>
//<doStatement>
//<subroutineCall>
push pointer 0
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
//</expressionList>
call Sys.wait 2
//</subroutineCall>
pop temp 0
//</doStatement>
//<letStatement>
//<expression>
//<term>
push local 1
//</term>
//<expression>
//<term>
push constant 1
//</term>
//</expression>
sub
//</expression>
pop local 1
//</letStatement>
//</statements>
goto WHILETRUE8
label WHILEFALSE8
//</whileStatement>
//<doStatement>
//<subroutineCall>
push pointer 0
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
//</expressionList>
call Sys.wait 2
//</subroutineCall>
pop temp 0
//</doStatement>
//<letStatement>
//<expression>
//<term>
push local 0
//</term>
//<expression>
//<term>
push constant 1
//</term>
//</expression>
sub
//</expression>
pop local 0
//</letStatement>
//</statements>
goto WHILETRUE7
label WHILEFALSE7
//</whileStatement>
//<whileStatement>
label WHILETRUE13
//<expression>
//<term>
//<term>
//<expression>
//<term>
push local 0
//</term>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
eq
//</expression>
//</term>
not
//</term>
//</expression>
not
if-goto WHILEFALSE13
//<statements>
//<doStatement>
//<subroutineCall>
push pointer 0
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
//</expressionList>
call Sys.wait 2
//</subroutineCall>
pop temp 0
//</doStatement>
//<letStatement>
//<expression>
//<term>
push local 0
//</term>
//<expression>
//<term>
push constant 1
//</term>
//</expression>
add
//</expression>
pop local 0
//</letStatement>
//</statements>
goto WHILETRUE13
label WHILEFALSE13
//</whileStatement>
//<returnStatement>
push constant 0
return
//</returnStatement>
//</statements>
//</subroutineBody>
//</subroutineDec>
//<subroutineDec>
//<parameterList>
//</parameterList>
//<subroutineBody>
function Sys.error 0
//<statements>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 3
call String.new 1
push constant 69
call String.appendChar 2
push constant 82
call String.appendChar 2
push constant 82
call String.appendChar 2
//</term>
//</expression>
//</expressionList>
call Output.printString 1
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
//</expressionList>
call Output.printInt 1
//</subroutineCall>
pop temp 0
//</doStatement>
//<returnStatement>
push constant 0
return
//</returnStatement>
//</statements>
//</subroutineBody>
//</subroutineDec>
//</class>
