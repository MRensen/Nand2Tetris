//<class>
//<classVarDec>
//</classVarDec>
//<subroutineDec>
//<parameterList>
//</parameterList>
//<subroutineBody>
function Output.init 0
//</subroutineDec>
//<subroutineDec>
//<parameterList>
//</parameterList>
//<subroutineBody>
//<varDec>
//</varDec>
function Output.initMap 1
//<statements>
//<letStatement>
//<expression>
//<term>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 127
//</term>
//</expression>
//</expressionList>
call Array.new 1
//</subroutineCall>
//</term>
//</expression>
pop static 0
//</letStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 32
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 33
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 34
//</term>
//</expression>
//<expression>
//<term>
push constant 54
//</term>
//</expression>
//<expression>
//<term>
push constant 54
//</term>
//</expression>
//<expression>
//<term>
push constant 20
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 35
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 18
//</term>
//</expression>
//<expression>
//<term>
push constant 18
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 18
//</term>
//</expression>
//<expression>
//<term>
push constant 18
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 18
//</term>
//</expression>
//<expression>
//<term>
push constant 18
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 36
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 37
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 35
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 49
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 38
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 54
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 54
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 39
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 40
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 41
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 42
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 43
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 44
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 45
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 46
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 47
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 32
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 1
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 49
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 14
//</term>
//</expression>
//<expression>
//<term>
push constant 15
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 50
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 28
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 52
//</term>
//</expression>
//<expression>
//<term>
push constant 16
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 28
//</term>
//</expression>
//<expression>
//<term>
push constant 26
//</term>
//</expression>
//<expression>
//<term>
push constant 25
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 60
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 53
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 31
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 54
//</term>
//</expression>
//<expression>
//<term>
push constant 28
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 31
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 55
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 49
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 56
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 57
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 62
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 14
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 58
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 59
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 60
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 61
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 62
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 64
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 59
//</term>
//</expression>
//<expression>
//<term>
push constant 59
//</term>
//</expression>
//<expression>
//<term>
push constant 59
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 65
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 66
//</term>
//</expression>
//<expression>
//<term>
push constant 31
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 31
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 31
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 67
//</term>
//</expression>
//<expression>
//<term>
push constant 28
//</term>
//</expression>
//<expression>
//<term>
push constant 54
//</term>
//</expression>
//<expression>
//<term>
push constant 35
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 35
//</term>
//</expression>
//<expression>
//<term>
push constant 54
//</term>
//</expression>
//<expression>
//<term>
push constant 28
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 68
//</term>
//</expression>
//<expression>
//<term>
push constant 15
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 15
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 69
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 35
//</term>
//</expression>
//<expression>
//<term>
push constant 11
//</term>
//</expression>
//<expression>
//<term>
push constant 15
//</term>
//</expression>
//<expression>
//<term>
push constant 11
//</term>
//</expression>
//<expression>
//<term>
push constant 35
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 70
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 35
//</term>
//</expression>
//<expression>
//<term>
push constant 11
//</term>
//</expression>
//<expression>
//<term>
push constant 15
//</term>
//</expression>
//<expression>
//<term>
push constant 11
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 71
//</term>
//</expression>
//<expression>
//<term>
push constant 28
//</term>
//</expression>
//<expression>
//<term>
push constant 54
//</term>
//</expression>
//<expression>
//<term>
push constant 35
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 59
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 54
//</term>
//</expression>
//<expression>
//<term>
push constant 44
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 72
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 73
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 74
//</term>
//</expression>
//<expression>
//<term>
push constant 60
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 14
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 75
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 15
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 76
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 35
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 77
//</term>
//</expression>
//<expression>
//<term>
push constant 33
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 78
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 55
//</term>
//</expression>
//<expression>
//<term>
push constant 55
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 59
//</term>
//</expression>
//<expression>
//<term>
push constant 59
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 79
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 80
//</term>
//</expression>
//<expression>
//<term>
push constant 31
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 31
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 81
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 59
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 82
//</term>
//</expression>
//<expression>
//<term>
push constant 31
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 31
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 83
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 28
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 84
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 45
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 85
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 86
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 87
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 18
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 88
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 89
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 90
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 49
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 35
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 91
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 92
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 1
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 32
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 93
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 94
//</term>
//</expression>
//<expression>
//<term>
push constant 8
//</term>
//</expression>
//<expression>
//<term>
push constant 28
//</term>
//</expression>
//<expression>
//<term>
push constant 54
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 95
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 96
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 97
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 14
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 54
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 98
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 15
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 99
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 100
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 60
//</term>
//</expression>
//<expression>
//<term>
push constant 54
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 101
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 102
//</term>
//</expression>
//<expression>
//<term>
push constant 28
//</term>
//</expression>
//<expression>
//<term>
push constant 54
//</term>
//</expression>
//<expression>
//<term>
push constant 38
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 15
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 15
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 103
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 62
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 104
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 55
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 105
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 14
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 106
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 56
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 107
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 15
//</term>
//</expression>
//<expression>
//<term>
push constant 15
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 108
//</term>
//</expression>
//<expression>
//<term>
push constant 14
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 109
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 29
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 43
//</term>
//</expression>
//<expression>
//<term>
push constant 43
//</term>
//</expression>
//<expression>
//<term>
push constant 43
//</term>
//</expression>
//<expression>
//<term>
push constant 43
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 110
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 29
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 111
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 112
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 31
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 113
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 62
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 114
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 29
//</term>
//</expression>
//<expression>
//<term>
push constant 55
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
//<expression>
//<term>
push constant 7
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 115
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 116
//</term>
//</expression>
//<expression>
//<term>
push constant 4
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 15
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 54
//</term>
//</expression>
//<expression>
//<term>
push constant 28
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 117
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 54
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 118
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 119
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 18
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 120
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 30
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 121
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 62
//</term>
//</expression>
//<expression>
//<term>
push constant 48
//</term>
//</expression>
//<expression>
//<term>
push constant 24
//</term>
//</expression>
//<expression>
//<term>
push constant 15
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 122
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 27
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
//<expression>
//<term>
push constant 51
//</term>
//</expression>
//<expression>
//<term>
push constant 63
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 123
//</term>
//</expression>
//<expression>
//<term>
push constant 56
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 7
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 56
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 124
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 125
//</term>
//</expression>
//<expression>
//<term>
push constant 7
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 56
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 12
//</term>
//</expression>
//<expression>
//<term>
push constant 7
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<doStatement>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 126
//</term>
//</expression>
//<expression>
//<term>
push constant 38
//</term>
//</expression>
//<expression>
//<term>
push constant 45
//</term>
//</expression>
//<expression>
//<term>
push constant 25
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
//</expressionList>
call Output.create 12
//</subroutineCall>
pop temp 0
//</doStatement>
//<returnStatement>
push constant 0
return
//</returnStatement>
//</statements>
//</subroutineBody>
//</subroutineDec>
//<subroutineDec>
//<parameterList>
//</parameterList>
//<subroutineBody>
//<varDec>
//</varDec>
function Output.create 1
//<statements>
//<letStatement>
//<expression>
//<term>
//<subroutineCall>
//<expressionList>
//<expression>
//<term>
push constant 11
//</term>
//</expression>
//</expressionList>
call Array.new 1
//</subroutineCall>
//</term>
//</expression>
pop local 0
//</letStatement>
//<letStatement>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
push static 0
add
//<expression>
//<term>
push local 0
//</term>
//</expression>
pop temp 0
pop pointer 1
push temp 0
pop that 0
//</letStatement>
//<letStatement>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
push local 0
add
//<expression>
//<term>
push argument 1
//</term>
//</expression>
pop temp 0
pop pointer 1
push temp 0
pop that 0
//</letStatement>
//<letStatement>
//<expression>
//<term>
push constant 1
//</term>
//</expression>
push local 0
add
//<expression>
//<term>
push argument 2
//</term>
//</expression>
pop temp 0
pop pointer 1
push temp 0
pop that 0
//</letStatement>
//<letStatement>
//<expression>
//<term>
push constant 2
//</term>
//</expression>
push local 0
add
//<expression>
//<term>
push argument 3
//</term>
//</expression>
pop temp 0
pop pointer 1
push temp 0
pop that 0
//</letStatement>
//<letStatement>
//<expression>
//<term>
push constant 3
//</term>
//</expression>
push local 0
add
//<expression>
//<term>
push argument 4
//</term>
//</expression>
pop temp 0
pop pointer 1
push temp 0
pop that 0
//</letStatement>
//<letStatement>
//<expression>
//<term>
push constant 4
//</term>
//</expression>
push local 0
add
//<expression>
//<term>
push argument 5
//</term>
//</expression>
pop temp 0
pop pointer 1
push temp 0
pop that 0
//</letStatement>
//<letStatement>
//<expression>
//<term>
push constant 5
//</term>
//</expression>
push local 0
add
//<expression>
//<term>
push argument 6
//</term>
//</expression>
pop temp 0
pop pointer 1
push temp 0
pop that 0
//</letStatement>
//<letStatement>
//<expression>
//<term>
push constant 6
//</term>
//</expression>
push local 0
add
//<expression>
//<term>
push argument 7
//</term>
//</expression>
pop temp 0
pop pointer 1
push temp 0
pop that 0
//</letStatement>
//<letStatement>
//<expression>
//<term>
push constant 7
//</term>
//</expression>
push local 0
add
//<expression>
//<term>
push argument 8
//</term>
//</expression>
pop temp 0
pop pointer 1
push temp 0
pop that 0
//</letStatement>
//<letStatement>
//<expression>
//<term>
push constant 8
//</term>
//</expression>
push local 0
add
//<expression>
//<term>
push argument 9
//</term>
//</expression>
pop temp 0
pop pointer 1
push temp 0
pop that 0
//</letStatement>
//<letStatement>
//<expression>
//<term>
push constant 9
//</term>
//</expression>
push local 0
add
//<expression>
//<term>
push argument 10
//</term>
//</expression>
pop temp 0
pop pointer 1
push temp 0
pop that 0
//</letStatement>
//<letStatement>
//<expression>
//<term>
push constant 10
//</term>
//</expression>
push local 0
add
//<expression>
//<term>
push argument 11
//</term>
//</expression>
pop temp 0
pop pointer 1
push temp 0
pop that 0
//</letStatement>
//<returnStatement>
push constant 0
return
//</returnStatement>
//</statements>
//</subroutineBody>
//</subroutineDec>
//<subroutineDec>
//<parameterList>
//</parameterList>
//<subroutineBody>
function Output.getMap 0
//<statements>
//<ifStatement>
//<expression>
//<term>
//<expression>
//<term>
push argument 0
//</term>
//<expression>
//<term>
push constant 32
//</term>
//</expression>
lt
//</expression>
//</term>
//<expression>
//<term>
//<expression>
//<term>
push argument 0
//</term>
//<expression>
//<term>
push constant 126
//</term>
//</expression>
gt
//</expression>
//</term>
//</expression>
or
//</expression>
not
if-goto IFFALSE0
//<statements>
//<letStatement>
//<expression>
//<term>
push constant 0
//</term>
//</expression>
pop argument 0
//</letStatement>
//</statements>
goto IFTRUE0
label IFFALSE0
label IFTRUE0
//</ifStatement>
//<returnStatement>
//<expression>
//<term>
//<expression>
//<term>
push argument 0
//</term>
//</expression>
push static 0
add
pop pointer 1
push that 0
//</term>
//</expression>
return
//</returnStatement>
//</statements>
//</subroutineBody>
//</subroutineDec>
//<subroutineDec>
//<parameterList>
//</parameterList>
//<subroutineBody>
function Output.moveCursor 0
//</subroutineDec>
//<subroutineDec>
//<parameterList>
//</parameterList>
//<subroutineBody>
function Output.printChar 0
//</subroutineDec>
//<subroutineDec>
//<parameterList>
//</parameterList>
//<subroutineBody>
function Output.printString 0
//</subroutineDec>
//<subroutineDec>
//<parameterList>
//</parameterList>
//<subroutineBody>
function Output.printInt 0
//</subroutineDec>
//<subroutineDec>
//<parameterList>
//</parameterList>
//<subroutineBody>
function Output.println 0
//</subroutineDec>
//<subroutineDec>
//<parameterList>
//</parameterList>
//<subroutineBody>
function Output.backSpace 0
//</subroutineDec>
//</class>
