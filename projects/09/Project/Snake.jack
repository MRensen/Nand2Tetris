class Snake {
    field int x, y;
    field int step;
    field int size;

    constructor Snake new(int setx, int sety){
	let x = setx;
	let y = sety;
	let size = 10;
	return this;
    }

    method void dispose(){
	do Memory.deAlloc(this);
      	return;
    }

    /**getters and setters*/
    method void setX(int val) {
	let x = val;
	return;
    }

    method int getX() {
	return x;
    }

    method void setY(int val) {
	let y = val;
	return;
    }

    method void setSize(itn val){
	let size = val;
	return;
    }

    method int getSize(){
	return size;
    }

    method int getY() {
	return y;
    }

   /** Moves the snake up by 2 pixels. */
   method void moveUp() {
      if (y > 9) {
         do Screen.setColor(false);
         do Screen.drawRectangle(x, y, x + size, y + size);
         let y = y - size;
         do Screen.setColor(true);
         do Screen.drawRectangle(x, y, x + size, y + size);
      }
      return;
   }

   /** Moves the snake down by 2 pixels. */
   method void moveDown() {
      if ((y + size) < 250) {
         do Screen.setColor(false);
         do Screen.drawRectangle(x, y, x + size, y + size);
         let y = y + size;
         do Screen.setColor(true);
         do Screen.drawRectangle(x, y , x + size, y + size);
      }
      return;
   }

   /** Moves the snake left by 2 pixels. */
   method void moveLeft() {
      if (x > 9) {
         do Screen.setColor(false);
         do Screen.drawRectangle(x , y, x + size, y + size);
         let x = x - size;
         do Screen.setColor(true);
         do Screen.drawRectangle(x, y, x + size, y + size);
      }
      return;
   }

   /** Moves the snake right by 2 pixels. */
   method void moveRight() {
      if ((x + size) < 505) {
         do Screen.setColor(false);
         do Screen.drawRectangle(x, y, x + size, y + size);
         let x = x + size;
         do Screen.setColor(true);
         do Screen.drawRectangle(x, y, x + size, y + size);
      }
      return;
   }
}
